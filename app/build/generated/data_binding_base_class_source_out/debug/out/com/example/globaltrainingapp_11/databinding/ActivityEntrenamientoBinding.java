// Generated by view binder compiler. Do not edit!
package com.example.globaltrainingapp_11.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.globaltrainingapp_11.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEntrenamientoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout EntrenamientoConstraintLayout;

  @NonNull
  public final TextView TXTMUSCULOS;

  @NonNull
  public final TextView TXTNIVEL;

  @NonNull
  public final TextView TXTNOMBRE;

  @NonNull
  public final TextView TXTTIEMPO;

  @NonNull
  public final Button btnEmpezarEntrenamiento;

  @NonNull
  public final RecyclerView reciclerEntrenamiento;

  private ActivityEntrenamientoBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout EntrenamientoConstraintLayout, @NonNull TextView TXTMUSCULOS,
      @NonNull TextView TXTNIVEL, @NonNull TextView TXTNOMBRE, @NonNull TextView TXTTIEMPO,
      @NonNull Button btnEmpezarEntrenamiento, @NonNull RecyclerView reciclerEntrenamiento) {
    this.rootView = rootView;
    this.EntrenamientoConstraintLayout = EntrenamientoConstraintLayout;
    this.TXTMUSCULOS = TXTMUSCULOS;
    this.TXTNIVEL = TXTNIVEL;
    this.TXTNOMBRE = TXTNOMBRE;
    this.TXTTIEMPO = TXTTIEMPO;
    this.btnEmpezarEntrenamiento = btnEmpezarEntrenamiento;
    this.reciclerEntrenamiento = reciclerEntrenamiento;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEntrenamientoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEntrenamientoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_entrenamiento, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEntrenamientoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout EntrenamientoConstraintLayout = (ConstraintLayout) rootView;

      id = R.id.TXT_MUSCULOS;
      TextView TXTMUSCULOS = ViewBindings.findChildViewById(rootView, id);
      if (TXTMUSCULOS == null) {
        break missingId;
      }

      id = R.id.TXT_NIVEL;
      TextView TXTNIVEL = ViewBindings.findChildViewById(rootView, id);
      if (TXTNIVEL == null) {
        break missingId;
      }

      id = R.id.TXT_NOMBRE;
      TextView TXTNOMBRE = ViewBindings.findChildViewById(rootView, id);
      if (TXTNOMBRE == null) {
        break missingId;
      }

      id = R.id.TXT_TIEMPO;
      TextView TXTTIEMPO = ViewBindings.findChildViewById(rootView, id);
      if (TXTTIEMPO == null) {
        break missingId;
      }

      id = R.id.btnEmpezarEntrenamiento;
      Button btnEmpezarEntrenamiento = ViewBindings.findChildViewById(rootView, id);
      if (btnEmpezarEntrenamiento == null) {
        break missingId;
      }

      id = R.id.recicler_entrenamiento;
      RecyclerView reciclerEntrenamiento = ViewBindings.findChildViewById(rootView, id);
      if (reciclerEntrenamiento == null) {
        break missingId;
      }

      return new ActivityEntrenamientoBinding((ConstraintLayout) rootView,
          EntrenamientoConstraintLayout, TXTMUSCULOS, TXTNIVEL, TXTNOMBRE, TXTTIEMPO,
          btnEmpezarEntrenamiento, reciclerEntrenamiento);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
